<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    <!--表格列模板-->
    <ControlTemplate x:Key="colHeaderTemplage" TargetType="DataGridColumnHeader">
        <Border x:Name="BackgroundBorder" BorderThickness="0,1,0,1" 
                             BorderBrush="#e6dbba" 
                              Width="Auto">
            <Grid >
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <ContentPresenter  Margin="0,0,0,0" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                <Path x:Name="SortArrow" Visibility="Collapsed" Data="M0,0 L1,0 0.5,1 z" Stretch="Fill"  Grid.Column="2" Width="8" Height="6" Fill="White" Margin="0,0,50,0" 
                            VerticalAlignment="Center" RenderTransformOrigin="1,1" />
                <Rectangle Width="1" Fill="#d6c79b" HorizontalAlignment="Right" Grid.ColumnSpan="1" />
                <!--<TextBlock  Background="Red">
                            <ContentPresenter></ContentPresenter></TextBlock>-->
            </Grid>
        </Border>
    </ControlTemplate>
    <!--表格列基础样式-->
    <Style x:Key="colHeaderBaseStyle" TargetType="DataGridColumnHeader">
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="MinHeight" Value="32"/>
        <Setter Property="Foreground" Value="#323433"/>
        <Setter Property="FontSize" Value="14" />
        <Setter Property="MinWidth" Value="80" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <!--（先不用模板了：应用模板后，列宽不可调，暂未解决）-->
        <!--<Setter Property="Template" Value="{StaticResource colHeaderTemplage}"/>-->
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="ToolTip" Value="单击以排序"/>
                <Setter Property="Foreground" Value="Green"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <!--表格行基础样式-->
    <!--背景色改变必须先设置cellStyle 因为cellStyle会覆盖rowStyle样式-->
    <Style x:Key="rowBaseStyle" TargetType="DataGridRow">
        <Setter Property="Background" Value="#F2F2F2"/>
        <Setter Property="MinHeight" Value="25"/>
        <Setter Property="MaxHeight" Value="40"/>
        <Setter Property="Foreground" Value="Black" />
        <Style.Triggers>
            <!--隔行换色，需要DataGrid设置AlternationCount属性-->
            <Trigger Property="AlternationIndex" Value="0">
                <Setter Property="Background" Value="#e7e7e7" />
            </Trigger>
            <Trigger Property="AlternationIndex" Value="1" >
                <Setter Property="Background" Value="#f2f2f2" />
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="LightGray"/>
                <!--<Setter Property="Foreground" Value="White"/>-->
            </Trigger>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="Foreground" Value="Black"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <!--通用单元格模板-->
    <ControlTemplate x:Key="cellTemplate" TargetType="DataGridCell">
        <Label HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalContentAlignment="Center">
            <ContentPresenter/>
        </Label>
    </ControlTemplate>
    <!--checkbox单元格模板：checkbox绑定到模型的IsChecked属性-->
    <ControlTemplate x:Key="ckCellTemplate">
        <Border>
            <CheckBox x:Name="ckCell" HorizontalAlignment="Center" VerticalAlignment="Center"
                       BorderThickness="1" BorderBrush="#a40000"
                  IsChecked="{Binding Path=IsChecked, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
            </CheckBox>
        </Border>
    </ControlTemplate>
    <!--checkbox header模板：checkbox绑定到DataGrid的DataContext对应模型的IsChecked属性（自定义，见MyNet.Components.WPF.Models.CheckableModelCollection）-->
    <ControlTemplate x:Key="ckHeaderTemplate">
        <Border>
            <!--列头IsChecked绑定CheckableModelCollection的IsChecked属性-->
            <CheckBox x:Name="ckHeader" HorizontalAlignment="Center" VerticalAlignment="Center" 
                      BorderBrush="#a40000" BorderThickness="1"
                  IsChecked="{Binding Path=DataContext.IsChecked,RelativeSource={RelativeSource AncestorType=DataGrid}, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="Click">
                        <i:InvokeCommandAction Command="{Binding DataContext.CheckAllCmd,RelativeSource={RelativeSource AncestorType=DataGrid}}"
                                           CommandParameter="{Binding Path=IsChecked,ElementName=ckHeader}"/>
                    </i:EventTrigger>
                </i:Interaction.Triggers>
            </CheckBox>
        </Border>
    </ControlTemplate>
    <!--radio单元格模板：radio绑定到模型的IsChecked属性-->
    <ControlTemplate x:Key="radioCellTemplate">
        <Border>
            <RadioButton x:Name="radioCell" HorizontalAlignment="Center" VerticalAlignment="Center"
                       BorderThickness="1" BorderBrush="#a40000"
                  IsChecked="{Binding Path=IsSelected, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged,RelativeSource={RelativeSource AncestorType=DataGridRow}}">
            </RadioButton>
        </Border>
    </ControlTemplate>
    <!--checkbox单元格样式-->
    <Style x:Key="ckCellStyle" TargetType="DataGridCell">
        <Setter Property="Template" Value="{StaticResource ckCellTemplate}"/>
        <Setter Property="Width" Value="36"/>
    </Style>
    <!--radio单元格样式-->
    <Style x:Key="radioCellStyle" TargetType="DataGridCell">
        <Setter Property="Template" Value="{StaticResource radioCellTemplate}"/>
        <Setter Property="Width" Value="30"/>
    </Style>
    <!--radio header样式-->
    <Style x:Key="radioCellHeaderStyle" TargetType="DataGridColumnHeader">
        <Setter Property="Width" Value="30"/>
    </Style>
    <!--checkbox header样式-->
    <Style x:Key="ckCellHeaderStyle" TargetType="DataGridColumnHeader">
        <Setter Property="Template" Value="{StaticResource ckHeaderTemplate}"/>
        <Setter Property="Width" Value="36"/>
    </Style>
    <!--单元格样式-->
    <Style x:Key="cellBaseStyle" TargetType="DataGridCell">
        <Setter Property="Template" Value="{StaticResource cellTemplate}"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Style.Triggers>
            <Trigger Property="IsSelected" Value="True">
                <!--<Setter Property="Background" Value="White"/>
                <Setter Property="BorderThickness" Value="0"/>-->
                <Setter Property="Foreground" Value="Black"/>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="ToolTip" Value="{Binding Path=Content.Text,RelativeSource={RelativeSource Self},Mode=OneTime}"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <!--表格基础样式-->
    <Style x:Key="gridBaseStyle" TargetType="DataGrid">
        <Setter Property="AutoGenerateColumns" Value="False"/>
        <Setter Property="CanUserAddRows" Value="False"/>
        <Setter Property="CanUserDeleteRows" Value="False"/>
        <Setter Property="CanUserReorderColumns" Value="True"/>
        <Setter Property="CanUserSortColumns" Value="True"/>
        <Setter Property="CanUserResizeRows" Value="True"/>
        <Setter Property="CanUserResizeColumns" Value="True"/>
        <Setter Property="IsReadOnly" Value="True"/>
        <!--将行号显示在RowHeader上；value为0则隐藏该列-->
        <Setter Property="RowHeaderWidth" Value="30"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
        <Setter Property="SelectionMode" Value="Single"/>
        <Setter Property="ColumnHeaderStyle" Value="{StaticResource colHeaderBaseStyle}"/>
        <Setter Property="CellStyle" Value="{StaticResource cellBaseStyle}"/>
        <Setter Property="RowStyle" Value="{StaticResource rowBaseStyle}"/>
        <!--隔行换色标志-->
        <Setter Property="AlternationCount" Value="2"/>
        <!--<Setter Property="Background" Value="#e6dbbb"/>-->
        <Setter Property="BorderBrush" Value="#d6c79b" />
        <Setter Property="HorizontalGridLinesBrush">
            <Setter.Value>
                <SolidColorBrush Color="#d6c79b"/>
            </Setter.Value>
        </Setter>
        <Setter Property="VerticalGridLinesBrush">
            <Setter.Value>
                <SolidColorBrush Color="#d6c79b"/>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>